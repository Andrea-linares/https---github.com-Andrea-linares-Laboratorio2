"""
LABORATORIO 2 - AN√ÅLISIS DE DATOS CON PANDAS
Universidad Gerardo Barrios
Dataset: Titanic
"""

import pandas as pd
import numpy as np

print("INICIANDO AN√ÅLISIS DEL DATASET TITANIC")

try:
    df = pd.read_csv('train.csv')
    print("Dataset 'train.csv' cargado exitosamente!")
    
except FileNotFoundError:
    print("Error: No se encontr√≥ el archivo 'train.csv'")
    print("Aseg√∫rate de que est√© en la misma carpeta que este script")
    exit()

print("\n" + "="*60)
print("INFORMACI√ìN B√ÅSICA DEL DATASET")
print("="*60)

print(f"üìè Dimensiones del dataset: {df.shape[0]} filas x {df.shape[1]} columnas")
print(f"üìã Columnas disponibles: {list(df.columns)}")

print("\n" + "="*60)
print("RESUMEN ESTAD√çSTICO CON describe()")
print("="*60)

print("Resumen estad√≠stico de columnas num√©ricas:")
resumen = df.describe()
print(resumen)

print("\n" + "="*60)
print("TIPOS DE DATOS CON dtypes")
print("="*60)

print("Tipos de datos de cada columna:")
print(df.dtypes)

print("\nAn√°lisis de tipos de datos:")
for columna in df.columns:
    tipo = df[columna].dtype
    print(f"{columna}: {tipo}", end="")
    
    if tipo in ['int64', 'float64']:
        print(" ‚Üí Num√©rico: Estad√≠sticas, gr√°ficos, correlaciones")
    elif tipo == 'object':
        print(" ‚Üí Texto/Categ√≥rico: Conteos, moda, an√°lisis categ√≥rico")
    else:
        print(" ‚Üí Otro tipo: Verificar formato")

print("\n" + "="*60)
print("PRIMEROS Y √öLTIMOS REGISTROS")
print("="*60)

print("PRIMEROS 8 REGISTROS:")
print(df.head(8))

print("\n√öLTIMOS 8 REGISTROS:")
print(df.tail(8))

print("\nCOMPARACI√ìN ENTRE PRIMERO Y √öLTIMO REGISTRO:")
print("Primer registro - Pasajero ID:", df.iloc[0]['PassengerId'], "| Sobrevivi√≥:", df.iloc[0]['Survived'])
print("√öltimo registro - Pasajero ID:", df.iloc[-1]['PassengerId'], "| Sobrevivi√≥:", df.iloc[-1]['Survived'])

print("\n" + "="*60)
print("ORDENAR RESULTADOS CON sort_values()")
print("="*60)

print("PRIMEROS 5 PASAJEROS M√ÅS J√ìVENES:")
jovenes = df.sort_values(by='Age').head()
print(jovenes[['PassengerId', 'Name', 'Age', 'Pclass', 'Survived']])

print("\nPRIMEROS 5 PASAJEROS CON TARIFAS M√ÅS ALTAS:")
ricos = df.sort_values(by='Fare', ascending=False).head()
print(ricos[['PassengerId', 'Name', 'Fare', 'Pclass', 'Survived']])

print("\nORDENADO POR CLASE (1¬™, 2¬™, 3¬™) Y DENTRO DE CADA CLASE POR EDAD:")
clase_edad = df.sort_values(by=['Pclass', 'Age']).head(8)
print(clase_edad[['PassengerId', 'Pclass', 'Name', 'Age', 'Fare']])

print("\n" + "="*60)
print("MEDIDAS ESTAD√çSTICAS")
print("="*60)

print("AN√ÅLISIS ESTAD√çSTICO DE LA EDAD (Age):")

edad_limpia = df['Age'].dropna()

media_edad = np.mean(edad_limpia)
mediana_edad = np.median(edad_limpia)
desviacion_edad = np.std(edad_limpia)

print(f"Media (promedio): {media_edad:.2f} a√±os")
print(f"Mediana (valor central): {mediana_edad:.2f} a√±os")
print(f"Desviaci√≥n est√°ndar: {desviacion_edad:.2f} a√±os")
print(f"M√≠nimo: {np.min(edad_limpia):.0f} a√±os")
print(f"M√°ximo: {np.max(edad_limpia):.0f} a√±os")
print(f"Datos v√°lidos: {len(edad_limpia)} de {len(df)} registros")

print("\nAN√ÅLISIS ESTAD√çSTICO DE LA TARIFA (Fare):")
media_fare = np.mean(df['Fare'])
mediana_fare = np.median(df['Fare'])
desviacion_fare = np.std(df['Fare'])

print(f"Media: ${media_fare:.2f}")
print(f"Mediana: ${mediana_fare:.2f}")
print(f"Desviaci√≥n est√°ndar: ${desviacion_fare:.2f}")
print(f"M√≠nimo: ${np.min(df['Fare']):.2f}")
print(f"M√°ximo: ${np.max(df['Fare']):.2f}")

print("\n" + "="*60)
print("AN√ÅLISIS ADICIONAL - SOBREVIVENCIA")
print("="*60)

total_pasajeros = len(df)
sobrevivientes = df['Survived'].sum()
tasa_supervivencia = (sobrevivientes / total_pasajeros) * 100

print(f"TOTAL DE PASAJEROS: {total_pasajeros}")
print(f"SOBREVIVIENTES: {sobrevivientes}")
print(f"FALLECIDOS: {total_pasajeros - sobrevivientes}")
print(f"TASA DE SUPERVIVENCIA: {tasa_supervivencia:.1f}%")

print("\nSUPERVIVENCIA POR CLASE:")
for clase in sorted(df['Pclass'].unique()):
    pasajeros_clase = df[df['Pclass'] == clase]
    surv_clase = pasajeros_clase['Survived'].sum()
    tasa_clase = (surv_clase / len(pasajeros_clase)) * 100
    print(f"  Clase {clase}: {surv_clase}/{len(pasajeros_clase)} ({tasa_clase:.1f}%)")

print("\n" + "="*60)
print("INTERPRETACI√ìN DE RESULTADOS")
print("="*60)

print("""
a. üìã DESCRIPCI√ìN DEL DATASET:
   El dataset contiene informaci√≥n de los pasajeros del Titanic, incluyendo 
   edad, g√©nero, clase del boleto, tarifa pagada, puerto de embarque y si 
   sobrevivieron al naufragio.

b. üìä INFORMACI√ìN DEL RESUMEN ESTAD√çSTICO:
   - La edad promedio es alrededor de 30 a√±os, con una distribuci√≥n amplia
   - Las tarifas var√≠an significativamente, indicando diferencias econ√≥micas
   - Aproximadamente el 38% de los pasajeros sobrevivieron

c. üìà TENDENCIAS DETECTADAS:
   - Los pasajeros de primera clase pagan tarifas mucho m√°s altas
   - Hay correlaci√≥n entre clase social y tasa de supervivencia
   - La edad muestra una distribuci√≥n normal con algunos valores extremos

d. üèÜ CATEGOR√çAS QUE SOBRESALEN:
   - Clase 1: Mayor tasa de supervivencia y tarifas m√°s altas
   - Mujeres y ni√±os: Prioridad en los protocolos de rescate
   - Pasajeros con tarifas altas: Mejores ubicaciones en el barco

e. üîÑ DIFERENCIAS PRIMEROS/√öLTIMOS REGISTROS:
   - Los registros parecen estar ordenados por PassengerId
   - No hay patr√≥n evidente de diferencias sistem√°ticas

f. üìê VALOR DE LAS MEDIDAS ESTAD√çSTICAS:
   - La desviaci√≥n est√°ndar alta en tarifas indica gran desigualdad econ√≥mica
   - La diferencia entre media y mediana en tarifas sugiere sesgo hacia valores altos
   - La desviaci√≥n est√°ndar en edad indica diversidad generacional
""")

print("üéâ AN√ÅLISIS COMPLETADO EXITOSAMENTE!")
